/**
 * @file ext-polystar.js
 *
 *
 * @copyright 2010 CloudCanvas, Inc. All rights reserved
 * @copyright 2021 Optimistik SAS, Inc. All rights reserved
 * @license MIT
 *
 */
const t="polystar",loadExtensionTranslation=async function(e){let a;const u=e.configObj.pref("lang");try{a=await function __variableDynamicImportRuntime0__(t){switch(t){case"./locale/en.js":return Promise.resolve().then((function(){return l}));case"./locale/fr.js":return Promise.resolve().then((function(){return i}));case"./locale/sv.js":return Promise.resolve().then((function(){return s}));case"./locale/tr.js":return Promise.resolve().then((function(){return n}));case"./locale/uk.js":return Promise.resolve().then((function(){return o}));case"./locale/zh-CN.js":return Promise.resolve().then((function(){return r}));default:return new Promise((function(e,l){("function"==typeof queueMicrotask?queueMicrotask:setTimeout)(l.bind(null,new Error("Unknown variable dynamic import: "+t)))}))}}(`./locale/${u}.js`)}catch(e){console.warn(`Missing translation (${u}) for ${t} - using 'en'`),a=await Promise.resolve().then((function(){return l}))}e.i18next.addResourceBundle(u,t,a.default)};var e={name:t,async init(){const e=this,{svgCanvas:l}=e,{ChangeElementCommand:i}=l.history,addToHistory=t=>{l.undoMgr.addCommandToHistory(t)},{$id:s,$click:n}=l;let o,r,a,u,d;await loadExtensionTranslation(e);const showPanel=(t,e)=>{t?s(`${e}_panel`).style.removeProperty("display"):s(`${e}_panel`).style.display="none"},setAttr=(t,e)=>{l.changeSelectedAttribute(t,e),l.call("changed",o)},sec=t=>1/Math.cos(t);return{name:e.i18next.t(`${t}:name`),callback(){const e=`\n            <se-flyingbutton id="tools_polygon" title="${`${t}:title`}">\n              <se-button id="tool_star" title="${`${t}:buttons.0.title`}" src="star.svg">\n              </se-button>\n              <se-button id="tool_polygon" title="${`${t}:buttons.1.title`}" src="starBold.svg">\n              </se-button>\n               <se-button id="tool_starlight" title="${`${t}:buttons.2.title`}" src="starLight.svg"></se-button>\n            </se-flyingbutton>\n          `;l.insertChildAtIndex(s("tools_left"),e,10),n(s("tool_star"),(()=>{this.leftPanel.updateLeftPanel("tool_star")&&(l.setMode("star"),showPanel(!0,"star"),showPanel(!1,"polygon"),showPanel(!1,"starlight"))})),n(s("tool_polygon"),(()=>{this.leftPanel.updateLeftPanel("tool_polygon")&&(l.setMode("polygon"),showPanel(!0,"polygon"),showPanel(!1,"star"),showPanel(!1,"starlight"))})),n(s("tool_starlight"),(()=>{this.leftPanel.updateLeftPanel("tool_starlight")&&(l.setMode("starlight"),showPanel(!1,"star"),showPanel(!1,"polygon"),showPanel(!1,"starlight"))}));const r=`${t}:contextTools.0.label`,a=`${t}:contextTools.0.title`,u=`${t}:contextTools.1.label`,d=`${t}:contextTools.1.title`,c=`${t}:contextTools.2.label`,g=`${t}:contextTools.2.title`,h=`${t}:contextTools.3.label`,p=`${t}:contextTools.3.title`,b=document.createElement("template");b.innerHTML=`\n          <div id="star_panel">\n            <se-spin-input id="starNumPoints" label="${r}" min=1 step=1 value=5 title="${a}">\n            </se-spin-input>\n            <se-spin-input id="RadiusMultiplier" label="${u}" min=1 step=2.5 value=3 title="${d}">\n            </se-spin-input>\n            <se-spin-input id="radialShift" min=0 step=1 value=0 label="${c}" title="${g}">\n            </se-spin-input>\n          </div>\n          <div id="polygon_panel">\n            <se-spin-input size="3" id="polySides" min=1 step=1 value=5 label="${h}" title="${p}">\n            </se-spin-input>\n          </div>\n          <div id="starlight_panel">\n            <se-spin-input id="starlightIntensity" label="Intensity" min=0 step=0.1 value=1 title="Adjust the starlight intensity"></se-spin-input>\n          </div>\n        `,s("tools_top").appendChild(b.content.cloneNode(!0)),showPanel(!1,"star"),showPanel(!1,"polygon"),showPanel(!1,"starlight"),s("starNumPoints").addEventListener("change",(t=>{setAttr("point",t.target.value);const e=t.target.value;let l=o.length;for(;l--;){const t=o[l];if(t.hasAttribute("r")){const l=t.getAttribute("point"),s=t.getAttribute("points"),n=t.getAttribute("radialshift");let o=0,r=0;if(t.points){const a=t.points,u=a.numberOfItems;for(let t=0;t<u;++t){const e=a.getItem(t);o+=parseFloat(e.x),r+=parseFloat(e.y)}const d=o/u,c=r/u,g=Number(t.getAttribute("r")),h=g/t.getAttribute("starRadiusMultiplier");let p="";for(let t=0;e>=t;t++){let l=2*Math.PI*(t/e);l-=Math.PI/2;let i=g*Math.cos(l)+d,s=g*Math.sin(l)+c;p+=i+","+s+" ",isNaN(h)||(l=2*Math.PI*(t/e)+Math.PI/e,l-=Math.PI/2,l+=n,i=h*Math.cos(l)+d,s=h*Math.sin(l)+c,p+=i+","+s+" ")}t.setAttribute("points",p),addToHistory(new i(t,{point:l,points:s}))}}}})),s("RadiusMultiplier").addEventListener("change",(t=>{setAttr("starRadiusMultiplier",t.target.value)})),s("radialShift").addEventListener("change",(t=>{setAttr("radialshift",t.target.value)})),s("starlightIntensity").addEventListener("change",(t=>{setAttr("intensity",t.target.value)})),s("polySides").addEventListener("change",(t=>{setAttr("sides",t.target.value);const e=t.target.value;let l=o.length;for(;l--;){const t=o[l];if(t.hasAttribute("edge")){const l=t.getAttribute("sides"),n=t.getAttribute("points");let o=0,r=0;if(t.points){const a=t.points,u=a.numberOfItems;for(let t=0;t<u;++t){const e=a.getItem(t);o+=parseFloat(e.x),r+=parseFloat(e.y)}const d=o/u,c=r/u,g=t.getAttribute("edge")/2*(s=Math.PI/e,1/Math.tan(s))*sec(Math.PI/e);let h="";for(let t=0;e>=t;t++){const l=2*Math.PI*t/e;h+=g*Math.cos(l)+d+","+(g*Math.sin(l)+c)+" "}t.setAttribute("points",h),addToHistory(new i(t,{sides:l,points:n}))}}}var s}))},mouseDown(t){if("starlight"===l.getMode()){l.getColor("fill");const e=l.getColor("stroke"),i=2;return r=!0,u=t.start_x,d=t.start_y,a=l.addSVGElementsFromJson({element:"g",attr:{id:l.getNextId(),shape:"xShape"},children:[{element:"line",attr:{x1:u,y1:d,x2:u,y2:d,stroke:e,"stroke-width":i,"stroke-linecap":"round"}},{element:"line",attr:{x1:u,y1:d,x2:u,y2:d,stroke:e,"stroke-width":i,"stroke-linecap":"round"}}]}),{started:!0}}if("star"===l.getMode()){l.getColor("fill");const e=l.getColor("stroke"),i=10;return r=!0,u=t.start_x,d=t.start_y,a=l.addSVGElementsFromJson({element:"g",attr:{id:l.getNextId(),shape:"xShape"},children:[{element:"line",attr:{x1:u,y1:d,x2:u,y2:d,stroke:e,"stroke-width":i,"stroke-linecap":"round"}},{element:"line",attr:{x1:u,y1:d,x2:u,y2:d,stroke:e,"stroke-width":i,"stroke-linecap":"round"}}]}),{started:!0}}if("polygon"===l.getMode()){l.getColor("fill");const e=l.getColor("stroke"),i=20;return r=!0,u=t.start_x,d=t.start_y,a=l.addSVGElementsFromJson({element:"g",attr:{id:l.getNextId(),shape:"xShape"},children:[{element:"line",attr:{x1:u,y1:d,x2:u,y2:d,stroke:e,"stroke-width":i,"stroke-linecap":"round"}},{element:"line",attr:{x1:u,y1:d,x2:u,y2:d,stroke:e,"stroke-width":i,"stroke-linecap":"round"}}]}),{started:!0}}},mouseMove(t){if(r){if("starlight"===l.getMode()){const e=t.mouse_x,l=t.mouse_y,i=e-u,s=l-d,n=Math.sqrt(i*i+s*s);return a.firstChild.setAttribute("x1",u-n),a.firstChild.setAttribute("y1",d-n),a.firstChild.setAttribute("x2",u+n),a.firstChild.setAttribute("y2",d+n),a.lastChild.setAttribute("x1",u+n),a.lastChild.setAttribute("y1",d-n),a.lastChild.setAttribute("x2",u-n),a.lastChild.setAttribute("y2",d+n),{started:!0}}if("star"===l.getMode()){const e=t.mouse_x,l=t.mouse_y,i=e-u,s=l-d,n=Math.sqrt(i*i+s*s);return a.firstChild.setAttribute("x1",u-n),a.firstChild.setAttribute("y1",d-n),a.firstChild.setAttribute("x2",u+n),a.firstChild.setAttribute("y2",d+n),a.lastChild.setAttribute("x1",u+n),a.lastChild.setAttribute("y1",d-n),a.lastChild.setAttribute("x2",u-n),a.lastChild.setAttribute("y2",d+n),{started:!0}}if("polygon"===l.getMode()){const e=t.mouse_x,l=t.mouse_y,i=e-u,s=l-d,n=Math.sqrt(i*i+s*s);return a.firstChild.setAttribute("x1",u-n),a.firstChild.setAttribute("y1",d-n),a.firstChild.setAttribute("x2",u+n),a.firstChild.setAttribute("y2",d+n),a.lastChild.setAttribute("x1",u+n),a.lastChild.setAttribute("y1",d-n),a.lastChild.setAttribute("x2",u-n),a.lastChild.setAttribute("y2",d+n),{started:!0}}}},mouseUp(){if("starlight"===l.getMode()){const t=document.getElementById("tool_select");t&&t.click();return{keep:"0"!==a.getAttribute("sl"),element:a}}if("star"===l.getMode()){return{keep:"0"!==a.getAttribute("r"),element:a}}if("polygon"===l.getMode()){return{keep:"0"!==a.getAttribute("edge"),element:a}}},selectedChanged(t){o=t.elems;let e=o.length;if(!e)return showPanel(!1,"star"),showPanel(!1,"polygon"),void showPanel(!1,"starlight");for(;e--;){const l=o[e];"star"===l?.getAttribute("shape")?t.selectedElement&&!t.multiselected?(s("starNumPoints").value=l.getAttribute("point"),s("radialShift").value=l.getAttribute("radialshift"),showPanel(!0,"star")):showPanel(!1,"star"):"regularPoly"===l?.getAttribute("shape")?t.selectedElement&&!t.multiselected?(s("polySides").value=l.getAttribute("sides"),showPanel(!0,"polygon")):showPanel(!1,"polygon"):"starlight"===l?.getAttribute("shape")?t.selectedElement&&!t.multiselected?(s("starlightIntensity").value=l.getAttribute("intensity"),showPanel(!0,"starlight")):showPanel(!1,"starlight"):(showPanel(!1,"star"),showPanel(!1,"polygon"),showPanel(!1,"starlight"))}}}}},l=Object.freeze({__proto__:null,default:{name:"star",title:"Polygone/Star Tool",buttons:[{title:"Star Tool"},{title:"Polygon Tool"}],contextTools:[{title:"Number of Sides",label:"points"},{title:"Pointiness",label:"Pointiness"},{title:"Twists the star",label:"Radial Shift"},{title:"Number of Sides",label:"sides"}]}}),i=Object.freeze({__proto__:null,default:{name:"etoile",title:"Outil Polygone/Etoile",buttons:[{title:"Outil Etoile"},{title:"Outil Polygone"}],contextTools:[{title:"Nombre de côtés",label:"points"},{title:"Précision",label:"Précision"},{title:"Torsion Etoile",label:"Décalage Radial"},{title:"Nombre de côtés",label:"côtés"}]}}),s=Object.freeze({__proto__:null,default:{name:"stjärna",title:"Polygon/stjärnverktyg",buttons:[{title:"Stjärnverktyg"},{title:"Polygonverktyg"}],contextTools:[{title:"Antal sidor",label:"poäng"},{title:"Pointiness",label:"Pointiness"},{title:"Vrider stjärnan",label:"Radiell förskjutning"},{title:"Antal sidor",label:"sidor"}]}}),n=Object.freeze({__proto__:null,default:{name:"yıldız",title:"Çokgen/Yıldız Aracı",buttons:[{title:"Yıldız Aracı"},{title:"Çokgen Aracı"}],contextTools:[{title:"Kenar Sayısı",label:"noktalar"},{title:"Sivrilik",label:"Sivrilik"},{title:"Yıldızı Kıvır",label:"Döngüsel Kaydırma"},{title:"Kenar Sayısı",label:"kenarlar"}]}}),o=Object.freeze({__proto__:null,default:{name:"зірка",title:"Полігон/Зірка",buttons:[{title:"Зірка"},{title:"Полігон"}],contextTools:[{title:"Кількість Сторін",label:"точки"},{title:"Без точок",label:"Без точок"},{title:"Закручення зірки",label:"Радіальне Зміщення"},{title:"Кількість Сторін",label:"сторони"}]}}),r=Object.freeze({__proto__:null,default:{name:"星形",title:"Polygone/Star Tool",buttons:[{title:"星形工具"},{title:"多边形工具"}],contextTools:[{title:"顶点",label:"顶点"},{title:"钝度",label:"钝度"},{title:"径向",label:"径向"},{title:"边数",label:"边数"}]}});export{e as default};
//# sourceMappingURL=ext-polystar.js.map
